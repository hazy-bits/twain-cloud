service: twain-cloud # NOTE: update this with your service name

local: ${file(serverless.local.yml)} # local settings

custom:
  deployment: ${opt:deployment, 'private'} 
  overrides: ${file(./serverless.deployment.${self:custom.deployment}.yml)}

  optimize:
    global: true
    debug: false
    minify: false
    presets: ['es2016']

plugins:
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-pseudo-parameters
  - serverless-plugin-tracing

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  tracing: true # enable X-Ray tracing

  environment:
    # General
    SERVICE: ${self:service}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    
    # Databases
    TWAIN_SCANNERS_TABLE: ${self:service}-scanners-${self:provider.stage}
    CACHE_DB_NAME: ${self:service}-cache-${self:provider.stage}
    USERS_DB_NAME: ${self:service}-users-${self:provider.stage}

    # TWAIN Cloud
    TWAIN_BUCKET: twain-cloud-bucket-#{AWS::AccountId}-${self:provider.stage}
    TWAIN_WEBSITE_BUCKET: twain-cloud-website-#{AWS::AccountId}-${self:provider.stage}

    TWAIN_IOT_ROLE: "twain-role-iot-${self:provider.stage}"
    TWAIN_CLOUD_EVENT: "twain_cloud_event_${self:provider.stage}" # Minimum length of 1. Maximum length of 128. Pattern: ^[a-zA-Z0-9_]+$ 

    # Enpoints
    TWAIN_IOT_ENDPOINT: ${self:custom.overrides.TWAIN_IOT_ENDPOINT}
    TWAIN_API: ${self:custom.overrides.TWAIN_API}
    TWAIN_WEB: ${self:custom.overrides.TWAIN_WEB}

    # Auth General
    REDIRECT_CLIENT_URI: ${self:provider.environment.TWAIN_WEB}
    TOKEN_SECRET: ${self:custom.overrides.ACCESS_TOKEN_SECRET}

    # Auth Providers
    PROVIDER_FACEBOOK_ID: ${self:custom.overrides.PROVIDER_FACEBOOK_ID}
    PROVIDER_FACEBOOK_SECRET: ${self:custom.overrides.PROVIDER_FACEBOOK_SECRET}
    PROVIDER_GOOGLE_ID: ${self:custom.overrides.PROVIDER_GOOGLE_ID}
    PROVIDER_GOOGLE_SECRET: ${self:custom.overrides.PROVIDER_GOOGLE_SECRET}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
        - dynamodb:Scan
      # TODO: tweak this - we don't want to give access to all dynamoDB tables!
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:*"

    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: "*"

    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource: "*"

    - Effect: "Allow"
      Action:
        - 'iot:Publish'
      Resource: "*"
    - Effect: "Allow" # xray permissions (required)
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

package:
  individually: true
  excludeDevDependencies: false
  exclude:
    - .git/**
    - node_modules/**

functions: ${file(./serverless.functions.yml)}

resources: ${file(./serverless.resources.yml)}